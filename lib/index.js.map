{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 189f3f25a5a9f15e1fe0","webpack:///external \"rxjs\"","webpack:///./src/graphql-subscribe.js","webpack:///./src/graphql-observe.js","webpack:///./src/fetch-error.js"],"names":["observer","abortController","subscriptionUrl","url","encodeURIComponent","JSON","eventSource","event","error","fetch","method","signal","body","operationName","response","json","location","constructor","Error"],"mappings":"AAAA,eACA,iDADA,CAEA,kBAFA,CAGA,qCAHA,CAIA,+CAJA,CAKA,wBALA,CAMA,+CANA,CAQA,yCACC,CATD,EASC,kCATD,CASC,WACD,M,aCNA,cAGA,QACA,oBAGA,YACA,GADA,CAEA,IAFA,CAGA,UAHA,EAaA,MANA,mCAMA,CAHA,MAGA,UACA,CAxBA,SA4DA,MAhCA,MAgCA,CA7BA,KA6BA,CA1BA,oBACA,QADA,EAEA,2BACA,eADA,CAEA,aAFA,CAGA,KAHA,EAMA,CAkBA,CAfA,gBACA,sBACA,WAA2B,mBAA4B,CADvD,CAEA,WAAiC,QAAe,CAFhD,CAIA,MADA,aACA,EACA,CASA,CANA,kBAAsD,gDAA+D,CAMrH,CAHA,MAGA,S,eC7DA,yB,+DCEe,mBAAiE,CAC9E,MAAO,qBAAkBA,KAAY,CACnC,KAAMC,GAAkB,GAAxB,iBAEA,GAAIC,GAAkBC,YAAtB,sBAHmC,IAKjCD,GAAmB,cAAgBE,mBAAmBC,KAAtDH,SAAsDG,GAAnBD,CALF,MAQjCF,GAAmB,kBAAnBA,qBARiC,EAWnC,KAAMI,GAAc,GAApB,YAAoB,GAApB,CAUA,MARAA,aAAwBC,KAASP,OAAcK,WAAWE,EAA1DD,IAA+CD,CAAdL,CAQjC,CAPAM,UAAsBE,KAASR,EAA/BM,KAA+BN,GAO/B,CANAC,iBAAiC,IAAM,CACrC,CAAIK,eADiC,EAEnCA,SAFJL,CAMA,CAAO,IAAMA,EAAb,KAAaA,EArBf,CAAO,C,CCAM,mBAAkE,CAC/E,MAAO,qBAAkBD,KAAY,CACnC,KAAMC,GAAkB,GAAxB,iBAqCA,MAnCAQ,SAAW,CACTC,OADS,OAETC,OAAQV,EAFC,OAGTW,KAAM,eAAe,qBAGnBC,eAHmB,CAAf,CAHG,CAAXJ,OASQK,KAAY,CAChB,MAAIA,WAAJ,CAEEA,cACQC,KAAQ,CACZf,SADY,CAEZA,YAHJc,SAKSN,KAASR,EALlBc,KAKkBd,GALlBc,CAFF,KAQO,OAAIA,WAAJ,CAA6B,MAE5BE,GAAWF,cAAjB,UAAiBA,CAFiB,CAG5BR,EAAc,GAApB,YAAoB,GAHc,CAIlCA,YAAwBC,KAASP,OAAcK,WAAWE,EAA1DD,IAA+CD,CAAdL,CAJC,CAKlCM,UAAsBE,KAASR,EAA/BM,KAA+BN,GALG,CAMlCC,iBAAiC,IAAM,CACrC,CAAIK,eADiC,EAEnCA,SAFJL,CANK,KAYLD,SAAe,QAAfA,2BAAe,CAAfA,CA9BNS,SAiCSD,KAASR,EAjClBS,KAiCkBT,GAjClBS,CAmCA,CAAO,IAAMR,EAAb,KAAaA,EAtCf,CAAO,C,kDCJM,qBAA+B,CAC5CgB,mBAAkC,CAChC,WADgC,CAG5BC,MAAJ,iBAHgC,EAI9BA,+BAJ8B,CAOhC,sBAPgC,CAQhC,eACD,CAV2C,C,4JLA9C,C","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"barejs-observable-graphql-client\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"barejs-observable-graphql-client\"] = factory();\n\telse\n\t\troot[\"barejs-observable-graphql-client\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 189f3f25a5a9f15e1fe0","module.exports = require(\"rxjs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs\"\n// module id = 0\n// module chunks = 0","import { Observable } from 'rxjs'\n\nexport default function graphqlSubscribe (url, query, variables, operationName) {\n  return Observable.create(observer => {\n    const abortController = new AbortController()\n\n    let subscriptionUrl = url + '?query=' + encodeURIComponent(query)\n    if (variables) {\n      subscriptionUrl += '&variables=' + encodeURIComponent(JSON.stringify(variables))\n    }\n    if (operationName) {\n      subscriptionUrl += '&operationName=' + encodeURIComponent(operationName)\n    }\n\n    const eventSource = new EventSource(subscriptionUrl)\n\n    eventSource.onmessage = event => observer.next(JSON.parse(event.data))\n    eventSource.onerror = error => observer.error(error)\n    abortController.signal.onabort = () => {\n      if (eventSource.readyState !== 2) {\n        eventSource.close()\n      }\n    }\n\n    return () => abortController.abort()\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphql-subscribe.js","import { Observable } from 'rxjs'\nimport FetchError from './fetch-error'\n\nexport default function graphqlObservable (url, query, variables, operationName) {\n  return Observable.create(observer => {\n    const abortController = new AbortController()\n\n    fetch(url, {\n      method: 'POST',\n      signal: abortController.signal,\n      body: JSON.stringify({\n        query,\n        variables,\n        operationName\n      })\n    })\n      .then(response => {\n        if (response.status === 200) {\n          // The response is from a query or mutation.\n          response.json()\n            .then(json => {\n              observer.next(json)\n              observer.complete()\n            })\n            .catch(error => observer.error(error))\n        } else if (response.status === 201) {\n          // The response is from a subscription.\n          const location = response.headers.get('location')\n          const eventSource = new EventSource(location)\n          eventSource.onmessage = event => observer.next(JSON.parse(event.data))\n          eventSource.onerror = error => observer.error(error)\n          abortController.signal.onabort = () => {\n            if (eventSource.readyState !== 2) {\n              eventSource.close()\n            }\n          }\n        } else {\n          observer.error(new FetchError(response, 'Failed to execute GraphQL'))\n        }\n      })\n      .catch(error => observer.error(error))\n\n    return () => abortController.abort()\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphql-observe.js","export default class FetchError extends Error {\n  constructor (response, ...params) {\n    super(...params)\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, FetchError)\n    }\n\n    this.name = 'FetchError'\n    this.response = response\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/fetch-error.js"],"sourceRoot":""}